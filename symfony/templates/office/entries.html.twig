{% extends 'base.html.twig' %}
{% block title %}{% endblock %}
{% block body %}
    <div class="container">
        <div class="blog-header">
            <h1 class="blog-title">Available nearby Offices</h1>
            <p class="lead blog-description"></p>
        </div>
        <div class="row">
        <div id='map' class="col-6">
        </div>
        <div class="col-6">
            <div class="col-md-12 col-lg-12 col-xl-12">
                {% for label, messages in app.flashes %}
                    {% for message in messages %}
                        <div class="alert alert-{{ label }}" role="alert">
                            <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                            {{ message }}
                        </div>
                    {% endfor %}
                {% endfor %}
            </div>
            {% if app.user %}
            <div class="col-md-12 col-lg-12 col-xl-12">
                <a type="button" href="{{ path('post_office') }}" class="btn btn-primary pull-right">Add an Office</a>
            </div>
            {% endif %}
            <div class="col-sm-12 blog-main">
                <table class="table table-striped">
                    <thead>
                        <th>Title</th>
                        <th>Location</th>
                        <th>Description</th>
                    </thead>
                    {% for blogPost in entries %}
                        <tr>
                            <td>{{ blogPost.name }}</td>
                            <td>{{ blogPost.location }}</td>
                            <td>{{ blogPost.description }}</td>
                        </tr>
                    {% else %}
                        <tr>
                            <td colspan="5">No offices available</td>
                        </tr>
                    {% endfor %}
                </table>
            </div>
        </div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
      <script>
        mapboxgl.accessToken = 'pk.eyJ1Ijoia2FydmV6IiwiYSI6ImNrZGtwdGRsajBxd20zMG50c2t1MzRmNGIifQ.zUkJ4rXmsi-h2a4oLJg-Jw';
        var map = new mapboxgl.Map({
          container: 'map', // Container ID
          style: 'mapbox://styles/mapbox/streets-v11', // Map style to use
          center: [-122.25948, 37.87221], // Starting position [lng, lat]
          zoom: 12, // Starting zoom level
        });
        var geocoder = new MapboxGeocoder({ // Initialize the geocoder
            accessToken: mapboxgl.accessToken, // Set the access token
            mapboxgl: mapboxgl, // Set the mapbox-gl instance
            marker: false, // Do not use the default marker style
            placeholder: 'Search for offices', // Placeholder text for the search bar
            //bbox: [-122.30937, 37.84214, -122.23715, 37.89838], // Boundary for Berkeley
            proximity: {
              longitude: -122.25948,
              latitude: 37.87221
            } // Coordinates of UC Berkeley
          });

        // Add the geocoder to the map
        map.addControl(geocoder);
        var offices = {{ geojson|json_encode|raw }};
        offices.features.forEach(function(office, i){
          office.properties.id = i;
        });
        //console.log(offices);
        // After the map style has loaded on the page,
        // add a source layer and default styling for a single point
        map.on('load', function() {
            /* Add the data to your map as a layer */
            map.addLayer({
                "id": "locations",
                "type": "symbol",
                /* Add a GeoJSON source containing place coordinates and information. */
                "source": {
                    "type": "geojson",
                    "data": offices
                },
                "layout": {
                    "icon-image": "restaurant-15",
                    "icon-allow-overlap": true,
                }
                });
        });
    </script>
{% endblock %}